x <- c(1,0,3,2,4)
x
sort(x)
x
x = sort(x)
x
data <- read.csv("DataExcel.csv")
data <- read.csv("/DataExcel.csv")
data <- read.csv("./DataExcel.csv")
data <- read.csv(".Project/R_lttk/DataExcel.csv")
runif(9)
ex2 <- function() {
x<-runif(1)
if(x<=0.25) 0 else {
if(x>0.25 & x<=0.25+0.1) 9 else 10
}
}
ex2()
Sample.ex2<-function(n) {
replicate(n,ex2())
}
table(Sample.ex(56))
ex2 <- function() {
x<-runif(1)
if(x<=0.25) 0 else {
if(x>0.25 & x<=0.25+0.1) 9 else 10
}
}
Sample.ex2<-function(n) {
replicate(n,ex2())
}
table(Sample.ex2(56))
table(Sample.ex2(56))
table(Sample.ex2(10000))
table(Sample.ex2(56))
table(Sample.ex2(56))
Sample.ex2(56)
table(Sample.ex2(56)) / length(Sample.ex2(56))
table(Sample.ex2(56)) / length(Sample.ex2(56))
table(Sample.ex2(56)) / length(Sample.ex2(56))
table(Sample.ex2(56)) / length(Sample.ex2(56))
table(Sample.ex2(56)) / length(Sample.ex2(56))
table(Sample.ex2(56)) / length(Sample.ex2(56))
n <- 10000
mu <- 7
sigma <- 8
x <- rnorm(n, mu, sd)
var(x)
n <- 10000
mu <- 7
sigma <- 8
x <- rnorm(n, mu, sd)
x <- rnorm(n, mean=mu, sd=sigma)
var(x)
y <- (4-1)*var(x)/(sigma^2)
n <- 10000
mu <- 7
sigma <- 8
x <- rnorm(n, mean=mu, sd=sigma)
y <- (4-1)*var(x)/(sigma^2)
hist(y, freq = 0, breaks=40)
n <- 10000
mu <- 7
sigma <- 8
x <- rnorm(n, mean=mu, sd=sigma)
y <- (4-1)*var(x)/(sigma^2)
hist(y, freq = 0, breaks=40)
curve(dchisq(x,df=3), col="blue", lty=1, lwd=2, add=TRUE)
n <- 10000
mu <- 7
sigma <- 8
x <- rnorm(n, mean=mu, sd=sigma)
x
mu^2
y <- (4-1)*var(x) / (sigma^2)
y
n <- 10000
mu <- 7
sigma <- 8
y <- function() {
x <- rnorm(n, mean=mu, sd=sigma)(n-1)*var(x)/sigma^2
}
hist(y, freq = 0, breaks=40)
curve(dchisq(x,df=3), col="blue", lty=1, lwd=2, add=TRUE)
n <- 10000
mu <- 7
sigma <- 8
y <- function() {
x <- rnorm(n, mean=mu, sd=sigma)(n-1)*var(x)/sigma^2
}
y
y()
mu <- 7
sigma <- 8
n <- 1000
z <- function() {
x < rnorm(n,mu,sigma)(n-1)*var(x)/sigma^2
}
z()
mu <- 7
sigma <- 8
n <- 1000
z <- function() {
x < rnorm(n,mu,sigma)*(n-1)*var(x)/sigma^2
}
z()
mu <- 7
sigma <- 8
n <- 10
z <- function() {
x < rnorm(n,mu,sigma)*(n-1)*var(x)/sigma^2
}
z()
vecZ <- function(m) replicate(m,z())
hist(vecZ(1000), freq=0, breaks=40)
curve(dchisq(x,df=3), col="blue", lty=1, lwd=2, add=TRUE)
mu <- 7
sigma <- 8
n <- 10
z <- function() {
x <- rnorm(n,mu,sigma)*(n-1)*var(x)/sigma^2
}
z()
vecZ <- function(m) replicate(m,z())
hist(vecZ(1000), freq=0, breaks=40)
curve(dchisq(x,df=3), col="blue", lty=1, lwd=2, add=TRUE)
mu <- 7
sigma <- 8
n <- 1000
z <- function() {
x <- rnorm(n,mu,sigma)*(n-1)*var(x)/sigma^2
}
z()
vecZ <- function(m) replicate(m,z())
hist(vecZ(1000), freq=0, breaks=40)
curve(dchisq(x,df=3), col="blue", lty=1, lwd=2, add=TRUE)
mu <- 7
sigma <- 8
n <- 10
z <- function() {
x <- rnorm(n,mu,sigma)*(n-1)*var(x)/sigma^2
}
z()
vecZ <- function(m) replicate(m,z())
hist(vecZ(1000), freq=0, breaks=40)
curve(dchisq(x,df=3), col="blue", lty=1, lwd=2, add=TRUE)
mu <- 7
sigma <- 8
n <- 10
z <- function() {
x <- rnorm(n,mu,sigma)*(n-1)*var(x)/sigma^2
}
z()
vecZ <- function(m) replicate(m,z())
hist(vecZ(1000), freq=0, breaks=40)
curve(dchisq(x,df=9), col="blue", lty=1, lwd=2, add=TRUE)
mu <- 7
sigma <- 8
n <- 4
z <- function() {
x <- rnorm(n,mu,sigma)*(n-1)*var(x)/sigma^2
}
z()
vecZ <- function(m) replicate(m,z())
hist(vecZ(1000), freq=0, breaks=40)
curve(dchisq(x,df=3), col="blue", lty=1, lwd=2, add=TRUE)
mu <- 7
sigma <- 8
n <- 4
z <- function() {
x <- rnorm(n,mu,sigma)*(n-1)*var(x)/sigma^2
}
z()
vecZ <- function(m) replicate(m,z())
hist(vecZ(1000), freq=0, breaks=40)
curve(dchisq(x,df=3), col="blue", lty=1, lwd=2, add=TRUE)
mu <- 7
sigma <- 8
n <- 4
z <- function() {
x <- rnorm(n,mu,sigma)*(n-1)*var(x)/sigma^2
}
z()
vecZ <- function(m) replicate(m,z())
hist(vecZ(4), freq=0, breaks=40)
curve(dchisq(x,df=3), col="blue", lty=1, lwd=2, add=TRUE)
mu <- 2
sigma <- 2
n <- 10
z <- function() {
x <- rnorm(n,mu,sigma)(n-1)*var(x)/sigma^2
}
z()
vecZ <- function(m) replicate(m,z())
hist(vecZ(1000), freq=0, breaks=40)
curve(dchisq(x,df=n-1), col="blue", lty=1, lwd=2, add=TRUE)
mu <- 2
sigma <- 2
n <- 10
z <- function() {
x <- rnorm(n,mu,sigma)*(n-1)*var(x)/sigma^2
}
z()
vecZ <- function(m) replicate(m,z())
hist(vecZ(1000), freq=0, breaks=40)
curve(dchisq(x,df=n-1), col="blue", lty=1, lwd=2, add=TRUE)
mu <- 7
sigma <- 8
n <- 4
z <- function() {
x <- rnorm(n,mu,sigma)*(n-1)*var(x)/sigma^2
}
z()
vecZ <- function(m) replicate(m,z())
hist(vecZ(4), freq=0, breaks=40)
curve(dchisq(x,df=3), col="blue", lty=1, lwd=2, add=TRUE)
mu <- 7
sigma <- 8
n <- 10
z <- function() {
x <- rnorm(n,mu,sigma)*(n-1)*var(x)/sigma^2
}
z()
vecZ <- function(m) replicate(m,z())
hist(vecZ(1000), freq=0, breaks=40)
curve(dchisq(x,df=3), col="blue", lty=1, lwd=2, add=TRUE)
mu <- 2
sigma <- 2
n <- 10
z <- function() {
x <- rnorm(n,mu,sigma)*(n-1)*var(x)/sigma^2
}
z()
vecZ <- function(m) replicate(m,z())
hist(vecZ(1000), freq=0, breaks=40)
curve(dchisq(x,df=n-1), col="blue", lty=1, lwd=2, add=TRUE)
mu <- 7
sigma <- 8
n <- 10
z <- function() {
x <- rnorm(n,mu,sigma)*(n-1)*var(x)/sigma^2
}
z()
vecZ <- function(m) replicate(m,z())
hist(vecZ(1000), freq=0, breaks=40)
curve(dchisq(x,df=3), col="blue", lty=1, lwd=2, add=TRUE)
mu <- 7
sigma <- 8
n <- 4
z <- function() {
x <- rnorm(n,mu,sigma)*(n-1)*var(x)/sigma^2
}
z()
vecZ <- function(m) replicate(m,z())
hist(vecZ(1000), freq=0, breaks=40)
curve(dchisq(x,df=3), col="blue", lty=1, lwd=2, add=TRUE)
mu <- 2
sigma <- 2
n <- 10
z <- function() {
x <- rnorm(n,mu,sigma)*(n-1)*var(x)/sigma^2
}
z()
vecZ <- function(m) replicate(m,z())
hist(vecZ(1000), freq=0, breaks=40)
curve(dchisq(x,df=n-1), col="blue", lty=1, lwd=2, add=TRUE)
mu <- 2
sigma <- 2
n <- 10
z <- function() {
x <- rnorm(n,mu,sigma)*(n-1)*var(x)/(sigma^2)
}
z()
z()
Z
z
mu <- 2
sigma <- 2
n <- 10
z <- function() {
x <- rnorm(n,mu,sigma)*(n-1)*var(x)/(sigma^2)
}
z()
vecZ <- function(m) replicate(m,z())
table(vecZ(1000))
mu <- 2
sigma <- 2
n <- 10
z <- function() {
x <- rnorm(n,mu,sigma)
(n-1)*var(x)/(sigma^2)
}
z()
vecZ <- function(m) replicate(m,z())
hist(vecZ(1000), freq=0, breaks=40)
curve(dchisq(x,df=n-1), col="blue", lty=1, lwd=2, add=TRUE)
x <- rnorm(n,mu,sigma)
(n-1)*var(x)/(sigma^2)
mu <- 2
sigma <- 2
n <- 10
z <- function() {
x <- rnorm(n,mu,sigma)
(n-1)*var(x)/(sigma^2)
}
z()
vecZ <- function(m) replicate(m,z())
hist(vecZ(1000), freq=0, breaks=40)
curve(dchisq(x,df=n-1), col="blue", lty=1, lwd=2, add=TRUE)
#Change the directory path in below statement to dataset path
setwd("~/Project/Final_Dimen_ana/HMP_Dataset")
# dirlist <- list.dirs(recursive = F)[c(1,2,3,4,5,6,7,8,9,10,11,12,13,14)]
dirlist <- list.dirs(recursive = F)[c(1)]
filelist <- sapply(dirlist,function(x) list.files(x))
resdf <- data.frame()
for (i in 1:length(dirlist))
{
# for (j in 1:length(filelist[[i]]))
for (j in 1:1)
{
file <- paste0(paste0(dirlist[i],"/",filelist[[i]][j]))
dat <- read.table(file)
names(dat) <- c("x_acc","y_acc","z_acc")
cors <- cor(dat)
variances <- var(dat)
fftx <- fft(dat$x_acc)
ffty <- fft(dat$y_acc)
fftz <- fft(dat$z_acc)
resdf <- rbind(resdf,data.frame(vol=gsub(".txt","",strsplit(filelist[[i]][j],"-")[[1]][9]),
meanx = mean(dat$x_acc),
meany = mean(dat$y_acc),
meanz = mean(dat$z_acc),
medianx = median(dat$x_acc),
mediany = median(dat$y_acc),
medianz = median(dat$z_acc),
corxy=cors[1,2],
coryz=cors[2,3],
corxz=cors[1,3],
varx=variances[1,1],
vary=variances[2,2],
varz=variances[3,3],
varxy=variances[1,2],
varyz=variances[2,3],
varxz=variances[1,3],
fftxmax=max(abs(Mod(fftx))), #Peak Amplitude of the Fourier Transform
fftymax=max(abs(Mod(ffty))),
fftzmax=max(abs(Mod(fftz))),
specenergy=(sum(Mod(fftx))/length(fftx))+(sum(Mod(ffty))/length(ffty))+(sum(Mod(fftz))/length
(fftz)), #Spectral Energy
xbtwnzandy=mean((dat$z_acc > dat$x_acc & dat$y_acc < dat$x_acc)),
#drinkglasscharacteristic
xless10=sum(dat$x_acc<10)/nrow(dat),
HMPactivity=gsub("./","",dirlist[i])
))
}
}
resdf
resdf
file <- paste0(paste0("Brush_teeth","/","Accelerometer-2011-04-11-13-28-18-brush_teeth-f1.txt"))
dat <- read.table(file)
data
dat
help("cor")
file <- paste0(paste0("Brush_teeth","/","Accelerometer-2011-04-11-13-28-18-brush_teeth-f1.txt"))
dat <- read.table(file)
cors <- cor(dat)
View(cors)
corxy=cors[1,2]
help("cors")
'??cors'
??cors
cors <- cor(dat)
View(cors)
View(cors)
corxy=cors[1,2]
coryz=cors[2,3]
corxz=cors[1,3]
#Change the directory path in below statement to dataset path
setwd("~/Project/Final_Dimen_ana/HMP_Dataset")
# dirlist <- list.dirs(recursive = F)[c(1,2,3,4,5,6,7,8,9,10,11,12,13,14)]
dirlist <- list.dirs(recursive = F)[c(1)]
filelist <- sapply(dirlist,function(x) list.files(x))
resdf <- data.frame()
for (i in 1:length(dirlist))
{
# for (j in 1:length(filelist[[i]]))
for (j in 1:1)
{
file <- paste0(paste0(dirlist[i],"/",filelist[[i]][j]))
dat <- read.table(file)
names(dat) <- c("x_acc","y_acc","z_acc")
cors <- cor(dat)
variances <- var(dat)
fftx <- fft(dat$x_acc)
ffty <- fft(dat$y_acc)
fftz <- fft(dat$z_acc)
resdf <- rbind(resdf,data.frame(vol=gsub(".txt","",strsplit(filelist[[i]][j],"-")[[1]][9]),
meanx = mean(dat$x_acc),
meany = mean(dat$y_acc),
meanz = mean(dat$z_acc),
medianx = median(dat$x_acc),
mediany = median(dat$y_acc),
medianz = median(dat$z_acc),
corxy=cors[1,2],
coryz=cors[2,3],
corxz=cors[1,3],
varx=variances[1,1],
vary=variances[2,2],
varz=variances[3,3],
varxy=variances[1,2],
varyz=variances[2,3],
varxz=variances[1,3],
fftxmax=max(abs(Mod(fftx))), #Peak Amplitude of the Fourier Transform
fftymax=max(abs(Mod(ffty))),
fftzmax=max(abs(Mod(fftz))),
specenergy=(sum(Mod(fftx))/length(fftx))+(sum(Mod(ffty))/length(ffty))+(sum(Mod(fftz))/length
(fftz)), #Spectral Energy
xbtwnzandy=mean((dat$z_acc > dat$x_acc & dat$y_acc < dat$x_acc)),
#drinkglasscharacteristic
xless10=sum(dat$x_acc<10)/nrow(dat),
HMPactivity=gsub("./","",dirlist[i])
))
}
}
# write.csv(resdf,file="Featured_Data.csv")
# file <- paste0(paste0("Brush_teeth","/","Accelerometer-2011-04-11-13-28-18-brush_teeth-f1.txt"))
# dat <- read.table(file)
resdf
file <- paste0(paste0("Brush_teeth","/","Accelerometer-2011-04-11-13-28-18-brush_teeth-f1.txt"))
dat <- read.table(file)
variances = var(dat)
variances
file <- paste0(paste0("Brush_teeth","/","Accelerometer-2011-04-11-13-28-18-brush_teeth-f1.txt"))
dat <- read.table(file)
names(dat) <- c("x_acc","y_acc","z_acc")
dat
fftx <- fft(dat$x_acc)
resdf
fftx
resdf
fftxmax=max(abs(Mod(fftx)))
fftxmax
Mod(fftx)
fftx
help("Mod")
Mod(fftx)
getOption(Mod(fftx), "max.print")
getOption("max.print")
mf = Mod(fftx)
len(mf)
length(mf)
Mod(fftx)
resdf
resdf
file <- paste0(paste0("Brush_teeth","/","Accelerometer-2011-04-11-13-28-18-brush_teeth-f1.txt"))
dat <- read.table(file)
names(dat) <- c("x_acc","y_acc","z_acc")
fftx <- fft(dat$x_acc)
ffty <- fft(dat$y_acc)
fftz <- fft(dat$z_acc)
specenergy=(sum(Mod(fftx))/length(fftx))+(sum(Mod(ffty))/length(ffty))+(sum(Mod(fftz))/length
(fftz)) #Spectral Energy
sum(Mod(fftx))/length(fftx)
length(fftx)
sum(Mod(fftx))/length(fftx)
Mod(fftx)
sum(Mod(fftx))
sum(Mod(fftx))/length(fftx)
specenergy= (sum(Mod(fftx))/length(fftx)) + (sum(Mod(ffty))/length(ffty)) + (sum(Mod(fftz))/length(fftz)) #Spectral Energy
specenergy
resdf
xbtwnzandy=mean((dat$z_acc > dat$x_acc & dat$y_acc < dat$x_acc))
xbtwnzandy
